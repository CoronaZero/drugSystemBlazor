@page "/Drug"
@rendermode InteractiveServer
@inject IJSRuntime JS
@using System.Linq
@using Microsoft.EntityFrameworkCore
@namespace drugSystemBlazor

<PageTitle>药品库存管理页面</PageTitle>
<h3>药品库存管理</h3>
<p><i>已连接到数据库:@db.DBpath</i></p>


@if (db.Drugs.Any())
{
    <h4>药品列表</h4>
    <table class="table">
        <thead>
            <tr>
                <th>药品ID</th>
                <th>药品名称</th>
                <th>药品单价</th>
                <th>药品库存</th>
                <th>操作</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Drug drug in db.Drugs.OrderBy(d => d.ID).ToList())
            {
                <tr>
                    <td>@drug.ID</td>
                    <td><input type="text" @bind="drug.Name" /></td>
                    <td><input type="text" @bind="drug.Price" /></td>
                    <td><input type="text" @bind="drug.Quantity" /></td>
                    <td>
                        <button @onclick="()=>UpdateDrug(drug)" class="btn btn-primary">更新</button>
                        <button @onclick="()=>DelDrug(drug)" class="btn btn-warning">删除</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p><strong>数据库内药品为空!</strong></p>
}

<hr style="height:16px;color:gray" />

<h4>添加药品...</h4>
<table class="table">
    <thead>
        <tr>
            <th>药品名称</th>
            <th>药品单价</th>
            <th>药品库存</th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><input @bind="drugToAdd.Name" /></td>
            <td><input @bind="drugToAdd.Price" /></td>
            <td><input @bind="drugToAdd.Quantity" /></td>
            <td><button @onclick="AddDrug" class="btn btn-primary">添加药品</button></td>
        </tr>
    </tbody>
</table>

<hr style="height:16px;color:gray" />

<h4>药品查找(按名称)</h4>
<input type="text" @bind="drugNameToSearch" />
<button class="btn btn-primary" @onclick="()=>SearchDrug(drugNameToSearch)">查找</button>
@if (drugSearchResult.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>药品ID</th>
                <th>药品名称</th>
                <th>药品单价</th>
                <th>药品库存</th>
                <th>操作</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Drug drug in drugSearchResult)
            {
                <tr>
                    <td>@drug.ID</td>
                    <td><input type="text" @bind="drug.Name" /></td>
                    <td><input type="text" @bind="drug.Price" /></td>
                    <td><input type="text" @bind="drug.Quantity" /></td>
                    <td>
                        <button @onclick="()=>UpdateDrug(drug)" class="btn btn-primary">更新</button>
                        <button @onclick="()=>DelDrug(drug)" class="btn btn-warning">删除</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>无结果</p>
}

@code {
    private DSDBcontext db = new DSDBcontext(); //连接到数据库
    private Drug drugToAdd = new Drug() { Price = 0, Quantity = 0 }; //新增药品
    private string drugNameToSearch = string.Empty; //根据药名查找药品
    private List<Drug> drugSearchResult = new List<Drug>(); //查找结果


    private void AddDrug() //新增药品函数
    {
        if (!string.IsNullOrWhiteSpace(drugToAdd.Name)) //判定要添加的药品名称是否为空
        {
            try
            {
                db.Add(drugToAdd);
                db.SaveChanges();
                drugToAdd.Name = string.Empty;
                drugToAdd.Price = 0;
                drugToAdd.Quantity = 0;
            }
            catch (Exception e)
            {
                JS.InvokeVoidAsync("alert", e.Message);
                return;
            }
            JS.InvokeVoidAsync("alert", "药品添加成功");
        }
        StateHasChanged();
    }

    private void UpdateDrug(Drug drug)
    {
        try
        {
            db.Update(drug);
            db.SaveChanges();
        }
        catch (Exception e)
        {
            JS.InvokeVoidAsync("alert", e.Message);
            return;
        }

    }

    private void DelDrug(Drug drug)
    {
        try
        {
            db.Remove(drug);
            db.SaveChanges();
        }
        catch (Exception e)
        {
            JS.InvokeVoidAsync("alert", e.Message);
            return;
        }
        JS.InvokeVoidAsync("alert", $"药品 {drug.Name} 删除成功");
    }

    private void SearchDrug(string dragName)
    {
        if (!string.IsNullOrEmpty(dragName)) //判断搜索字符串是否为空
        {
            drugSearchResult = db.Drugs.Where(d => d.Name.Contains(dragName)).OrderBy(d => d.ID).ToList(); //根据药品名称返回搜索结果
        }
        else
        {
            drugSearchResult = new List<Drug>(); //如果为空,返回空列表
        }

    }
    protected override void OnInitialized()
    {
        db.Database.EnsureCreated(); // 确保数据库已创建
    }

}
